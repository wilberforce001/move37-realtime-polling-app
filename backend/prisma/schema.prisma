generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int    @id @default(autoincrement())
  name         String
  email        String @unique
  passwordHash String
  role         Role   @default(USER)

  // Relations
  polls Poll[] @relation("UserPolls")
  votes Vote[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Poll {
  id          Int     @id @default(autoincrement())
  question    String
  isPublished Boolean @default(false)
  creatorId   Int

  // Relations
  creator User         @relation("UserPolls", fields: [creatorId], references: [id])
  options PollOption[]
  votes   Vote[]       @relation("PollVotes")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PollOption {
  id     Int    @id @default(autoincrement())
  text   String
  pollId Int

  // Relations
  poll  Poll   @relation(fields: [pollId], references: [id])
  votes Vote[]
}

model Vote {
  id       Int  @id @default(autoincrement())
  userId   Int?
  optionId Int
  pollId   Int

  // Relations
  user   User?      @relation(fields: [userId], references: [id])
  option PollOption @relation(fields: [optionId], references: [id])
  poll   Poll       @relation(fields: [pollId], references: [id], name: "PollVotes")

  createdAt DateTime @default(now())

  // Ensures a user can only vote once per poll
  // @@unique([userId, pollId])
}

enum Role {
  USER
  ADMIN
}
